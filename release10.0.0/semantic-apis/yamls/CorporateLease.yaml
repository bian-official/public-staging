openapi: 3.0.1
info:
  title: Corporate Lease
  description: The Corporate Lease product provides corporate customers with loans to support leasing activity for property and equipment under an umbrella leasing arrangement
  version: 10.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/B154/CorporateLease/10.0.0
paths:
  /CorporateLease/{corporateleaseId}/Control:
    put:
      tags:
      - CR - CorporateLeaseArrangement
      summary: CoCR Control the processing of Corporate Lease Arrangement
      description: CoCR Control the processing of Corporate Lease Arrangement
      operationId: Control
      parameters:
      - $ref: '#/components/parameters/CorporateLeaseID'
      requestBody:
        $ref: '#/components/requestBodies/CorporateLeaseArrangement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorporateLeaseArrangement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorporateLease/{corporateleaseId}/Exchange:
    put:
      tags:
      - CR - CorporateLeaseArrangement
      summary: EcCR Accept, verify, etc. aspects of Corporate Lease Arrangement processing
      description: EcCR Accept, verify, etc. aspects of Corporate Lease Arrangement processing
      operationId: Exchange
      parameters:
      - $ref: '#/components/parameters/CorporateLeaseID'
      requestBody:
        $ref: '#/components/requestBodies/CorporateLeaseArrangement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorporateLeaseArrangement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorporateLease/{corporateleaseId}/Execute:
    put:
      tags:
      - CR - CorporateLeaseArrangement
      summary: ExCR Execute an available automated action for Corporate Lease Arrangement
      description: ExCR Execute an available automated action for Corporate Lease Arrangement
      operationId: Execute
      parameters:
      - $ref: '#/components/parameters/CorporateLeaseID'
      requestBody:
        $ref: '#/components/requestBodies/CorporateLeaseArrangement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorporateLeaseArrangement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorporateLease/Initiate:
    post:
      tags:
      - CR - CorporateLeaseArrangement
      summary: InCR Instantiate a new Corporate Lease Arrangement
      description: InCR Instantiate a new Corporate Lease Arrangement
      operationId: Initiate
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/CorporateLeaseArrangement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorporateLeaseArrangement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorporateLease/{corporateleaseId}/Retrieve:
    get:
      tags:
      - CR - CorporateLeaseArrangement
      summary: ReCR Retrieve details about any aspect of Corporate Lease Arrangement
      description: ReCR Retrieve details about any aspect of Corporate Lease Arrangement
      operationId: Retrieve
      parameters:
      - $ref: '#/components/parameters/CorporateLeaseID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorporateLeaseArrangement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorporateLease/{corporateleaseId}/Request:
    put:
      tags:
      - CR - CorporateLeaseArrangement
      summary: RqCR Request manual intervention or a decision with respect to Corporate Lease Arrangement
      description: RqCR Request manual intervention or a decision with respect to Corporate Lease Arrangement
      operationId: Request
      parameters:
      - $ref: '#/components/parameters/CorporateLeaseID'
      requestBody:
        $ref: '#/components/requestBodies/CorporateLeaseArrangement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorporateLeaseArrangement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorporateLease/{corporateleaseId}/Update:
    put:
      tags:
      - CR - CorporateLeaseArrangement
      summary: UpCR Update details relating to Corporate Lease Arrangement
      description: UpCR Update details relating to Corporate Lease Arrangement
      operationId: Update
      parameters:
      - $ref: '#/components/parameters/CorporateLeaseID'
      requestBody:
        $ref: '#/components/requestBodies/CorporateLeaseArrangement'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorporateLeaseArrangement'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorporateLease/{corporateleaseId}/Administer/{administerId}/Control:
    put:
      tags:
      - BQ - Administer
      summary: CoBQ Control the processing of Administer
      description: CoBQ Control the processing of Administer
      operationId: ControlAdminister
      parameters:
      - $ref: '#/components/parameters/CorporateLeaseID'
      - $ref: '#/components/parameters/AdministerID'
      requestBody:
        $ref: '#/components/requestBodies/Administer'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Administer'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorporateLease/{corporateleaseId}/Administer/{administerId}/Exchange:
    put:
      tags:
      - BQ - Administer
      summary: EcBQ Accept, verify, etc. aspects of Administer processing
      description: EcBQ Accept, verify, etc. aspects of Administer processing
      operationId: ExchangeAdminister
      parameters:
      - $ref: '#/components/parameters/CorporateLeaseID'
      - $ref: '#/components/parameters/AdministerID'
      requestBody:
        $ref: '#/components/requestBodies/Administer'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Administer'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorporateLease/{corporateleaseId}/Fulfill/{fulfillId}/Exchange:
    put:
      tags:
      - BQ - Fulfill
      summary: EcBQ Accept, verify, etc. aspects of Fulfill processing
      description: EcBQ Accept, verify, etc. aspects of Fulfill processing
      operationId: ExchangeFulfill
      parameters:
      - $ref: '#/components/parameters/CorporateLeaseID'
      - $ref: '#/components/parameters/FulfillID'
      requestBody:
        $ref: '#/components/requestBodies/Fulfill'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fulfill'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorporateLease/{corporateleaseId}/Fulfill/{fulfillId}/Execute:
    put:
      tags:
      - BQ - Fulfill
      summary: ExBQ Execute an available automated action for Fulfill
      description: ExBQ Execute an available automated action for Fulfill
      operationId: ExecuteFulfill
      parameters:
      - $ref: '#/components/parameters/CorporateLeaseID'
      - $ref: '#/components/parameters/FulfillID'
      requestBody:
        $ref: '#/components/requestBodies/Fulfill'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fulfill'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorporateLease/{corporateleaseId}/Fulfill/Initiate:
    post:
      tags:
      - BQ - Fulfill
      summary: InBQ Instantiate a new Fulfill
      description: InBQ Instantiate a new Fulfill
      operationId: InitiateFulfill
      parameters:
      - $ref: '#/components/parameters/CorporateLeaseID'
      requestBody:
        $ref: '#/components/requestBodies/Fulfill'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fulfill'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorporateLease/{corporateleaseId}/Administer/{administerId}/Retrieve:
    get:
      tags:
      - BQ - Administer
      summary: ReBQ Retrieve details about any aspect of Administer
      description: ReBQ Retrieve details about any aspect of Administer
      operationId: RetrieveAdminister
      parameters:
      - $ref: '#/components/parameters/CorporateLeaseID'
      - $ref: '#/components/parameters/AdministerID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Administer'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorporateLease/{corporateleaseId}/Fulfill/{fulfillId}/Retrieve:
    get:
      tags:
      - BQ - Fulfill
      summary: ReBQ Retrieve details about any aspect of Fulfill
      description: ReBQ Retrieve details about any aspect of Fulfill
      operationId: RetrieveFulfill
      parameters:
      - $ref: '#/components/parameters/CorporateLeaseID'
      - $ref: '#/components/parameters/FulfillID'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fulfill'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorporateLease/{corporateleaseId}/Administer/{administerId}/Request:
    put:
      tags:
      - BQ - Administer
      summary: RqBQ Request manual intervention or a decision with respect to Administer
      description: RqBQ Request manual intervention or a decision with respect to Administer
      operationId: RequestAdminister
      parameters:
      - $ref: '#/components/parameters/CorporateLeaseID'
      - $ref: '#/components/parameters/AdministerID'
      requestBody:
        $ref: '#/components/requestBodies/Administer'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Administer'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorporateLease/{corporateleaseId}/Fulfill/{fulfillId}/Request:
    put:
      tags:
      - BQ - Fulfill
      summary: RqBQ Request manual intervention or a decision with respect to Fulfill
      description: RqBQ Request manual intervention or a decision with respect to Fulfill
      operationId: RequestFulfill
      parameters:
      - $ref: '#/components/parameters/CorporateLeaseID'
      - $ref: '#/components/parameters/FulfillID'
      requestBody:
        $ref: '#/components/requestBodies/Fulfill'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fulfill'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorporateLease/{corporateleaseId}/Administer/{administerId}/Update:
    put:
      tags:
      - BQ - Administer
      summary: UpBQ Update details relating to Administer
      description: UpBQ Update details relating to Administer
      operationId: UpdateAdminister
      parameters:
      - $ref: '#/components/parameters/CorporateLeaseID'
      - $ref: '#/components/parameters/AdministerID'
      requestBody:
        $ref: '#/components/requestBodies/Administer'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Administer'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
  /CorporateLease/{corporateleaseId}/Fulfill/{fulfillId}/Update:
    put:
      tags:
      - BQ - Fulfill
      summary: UpBQ Update details relating to Fulfill
      description: UpBQ Update details relating to Fulfill
      operationId: UpdateFulfill
      parameters:
      - $ref: '#/components/parameters/CorporateLeaseID'
      - $ref: '#/components/parameters/FulfillID'
      requestBody:
        $ref: '#/components/requestBodies/Fulfill'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fulfill'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/ForbiddenError'
        404:
          $ref: '#/components/responses/NotFoundError'
        429:
          $ref: '#/components/responses/TooManyRequestsError'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    CorporateLeaseArrangement:
      type: object
      properties:
        ? >-
          Fulfillanyscheduledandad-hocobligationsunderaservicearrangement,mosttypicallyforafinancialproductorfacilitywithinCorporateLease.

          Example:Performthescheduled(e.g.statements,standingorders)andad-hocOrrequested(e.g.balanceinquiries,fundtransfers)fulfillmenttasksforacustomercurrentaccountfacility.
        : type: string
        CorporateLeaseArrangementParameterType:
          type: string
        CorporateLeaseArrangementSelectedOption:
          type: string
        CorporateLeaseArrangementType:
          type: string
        CorporateLeaseArrangementSchedule:
          type: string
        CorporateLeaseArrangementStatus:
          type: string
        CorporateLeaseArrangementReference:
          type: string
        CorporateLeaseArrangementCurrency:
          type: string
        CorporateLeaseArrangementRegulationReference:
          type: string
        CorporateLeaseArrangementRegulationType:
          type: string
        CorporateLeaseArrangementJurisdiction:
          type: string
        CorporateLeaseArrangementBookingLocation:
          type: string
        CorporateLeaseArrangementAccountType:
          type: string
        CorporateLeaseArrangementAccountReference:
          type: string
    Fulfill:
      type: object
      properties:
        ? >-
          Fulfillanyscheduledandad-hocobligationsunderaservicearrangement,mosttypicallyforafinancialproductorfacilitywithinCorporateLease.

          Example:Performthescheduled(e.g.statements,standingorders)andad-hoc/requested(e.g.balanceinquiries,fundtransfers)fulfillmenttasksforacustomercurrentaccountfacility.
        : type: string
        FulfillPreconditions:
          type: string
        FulfillFeatureSchedule:
          type: string
        CorporateLeaseFulfillment:
          type: string
        FulfillPostconditions:
          type: string
        FulfillCorporateLeaseFulfillmentServiceType:
          type: string
        FulfillCorporateLeaseFulfillmentServiceDescription:
          type: string
        FulfillCorporateLeaseFulfillmentServiceInputsandOuputs:
          type: string
        FulfillCorporateLeaseFulfillmentServiceWorkProduct:
          type: string
        FulfillCorporateLeaseFulfillmentServiceName:
          type: string
    Administer:
      type: object
      properties:
        ? >-
          Fulfillanyscheduledandad-hocobligationsunderaservicearrangement,mosttypicallyforafinancialproductorfacilitywithinCorporateLease.

          Example:Performthescheduled(e.g.statements,standingorders)andad-hoc/requested(e.g.balanceinquiries,fundtransfers)fulfillmenttasksforacustomercurrentaccountfacility.
        : type: string
        AdministerPreconditions:
          type: string
        AdministerFeatureSchedule:
          type: string
        CorporateLeaseAdministration:
          type: string
        AdministerPostconditions:
          type: string
        AdministerCorporateLeaseAdministrationServiceType:
          type: string
        AdministerCorporateLeaseAdministrationServiceDescription:
          type: string
        AdministerCorporateLeaseAdministrationServiceInputsandOuputs:
          type: string
        AdministerCorporateLeaseAdministrationServiceWorkProduct:
          type: string
        AdministerCorporateLeaseAdministrationServiceName:
          type: string
    CorporateLeaseOutcome:
      type: object
      properties:
        CorporateLeaseFinancialFacility:
          type: string
        CorporateLeaseWorkProduct:
          type: string
    HTTPError:
      type: object
      properties:
        status_code:
          type: string
        status:
          type: string
        message:
          type: string
  parameters:
    CorporateLeaseID:
      name: corporateleaseId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    FulfillID:
      name: fulfillId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    AdministerID:
      name: administerId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    CorporateLeaseOutcomeID:
      name: corporateleaseoutcomeId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    CorporateLeaseArrangement:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CorporateLeaseArrangement'
    Administer:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Administer'
    Fulfill:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Fulfill'
  responses:
    HTTPError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequestsError:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
...
